{"section":{"id":"","level":"0","number":null,"path":"index.html","title":"Data Structures and Algorithms"},"subsections":[{"section":{"id":"sec:introduction","level":"1","number":"1","path":"section-1.html#sec:introduction","title":"Introduction"},"subsections":[{"section":{"id":"sec:motivation","level":"2","number":"1.1","path":"section-1.1.html#sec:motivation","title":"Motivation"},"subsections":[]},{"section":{"id":"sec:selecting-a-data-structure","level":"2","number":"1.2","path":"section-1.2.html#sec:selecting-a-data-structure","title":"Selecting a data structure"},"subsections":[]},{"section":{"id":"sec:practical-examples","level":"2","number":"1.3","path":"section-1.3.html#sec:practical-examples","title":"Practical examples"},"subsections":[{"section":{"id":"sec:search-engines","level":"4","number":null,"path":"section-1.3.html#sec:search-engines","title":"Search engines"},"subsections":[]},{"section":{"id":"sec:databases","level":"4","number":null,"path":"section-1.3.html#sec:databases","title":"Databases"},"subsections":[]},{"section":{"id":"sec:banks","level":"4","number":null,"path":"section-1.3.html#sec:banks","title":"Banks"},"subsections":[]}]},{"section":{"id":"sec:mathematical-preliminaries","level":"2","number":"1.4","path":"section-1.4.html#sec:mathematical-preliminaries","title":"Mathematical preliminaries"},"subsections":[]},{"section":{"id":"sec:programming-preliminaries","level":"2","number":"1.5","path":"section-1.5.html#sec:programming-preliminaries","title":"Programming preliminaries"},"subsections":[]},{"section":{"id":"sec:case-study-searching-in-a-list","level":"2","number":"1.6","path":"section-1.6.html#sec:case-study-searching-in-a-list","title":"Case study: Searching in a list"},"subsections":[{"section":{"id":"sec:binary-search","level":"3","number":"1.6.1","path":"section-1.6.html#sec:binary-search","title":"Binary search"},"subsections":[{"section":{"id":"sec:variations","level":"4","number":null,"path":"section-1.6.html#sec:variations","title":"Variations"},"subsections":[]}]}]},{"section":{"id":"sec:abstract-data-types","level":"2","number":"1.7","path":"section-1.7.html#sec:abstract-data-types","title":"Abstract data types"},"subsections":[{"section":{"id":"sec:example-collection-of-records","level":"4","number":null,"path":"section-1.7.html#sec:example-collection-of-records","title":"Example: Collection of records"},"subsections":[]},{"section":{"id":"sec:example-cars","level":"4","number":null,"path":"section-1.7.html#sec:example-cars","title":"Example: Cars"},"subsections":[]},{"section":{"id":"sec:example-computers-hard-drives-and-cpus","level":"4","number":null,"path":"section-1.7.html#sec:example-computers-hard-drives-and-cpus","title":"Example: Computers, hard drives, and CPUs"},"subsections":[]},{"section":{"id":"sec:adt-linear-collections","level":"3","number":"1.7.1","path":"section-1.7.html#sec:adt-linear-collections","title":"Linear collections"},"subsections":[]},{"section":{"id":"sec:adt-sets-and-maps","level":"3","number":"1.7.2","path":"section-1.7.html#sec:adt-sets-and-maps","title":"Sets and maps"},"subsections":[]},{"section":{"id":"sec:adt-graphs","level":"3","number":"1.7.3","path":"section-1.7.html#sec:adt-graphs","title":"Graphs"},"subsections":[]}]},{"section":{"id":"sec:ch01-review","level":"2","number":"1.8","path":"section-1.8.html#sec:ch01-review","title":"Review questions"},"subsections":[]}]},{"section":{"id":"sec:algorithm-analysis-introduction","level":"1","number":"2","path":"section-2.html#sec:algorithm-analysis-introduction","title":"Algorithm analysis, part 1: Introduction"},"subsections":[{"section":{"id":"sec:problems-algorithms-and-programs","level":"2","number":"2.1","path":"section-2.1.html#sec:problems-algorithms-and-programs","title":"Problems, algorithms, and programs"},"subsections":[{"section":{"id":"sec:problems","level":"3","number":"2.1.1","path":"section-2.1.html#sec:problems","title":"Problems"},"subsections":[]},{"section":{"id":"sec:algorithms","level":"3","number":"2.1.2","path":"section-2.1.html#sec:algorithms","title":"Algorithms"},"subsections":[]},{"section":{"id":"sec:programs","level":"3","number":"2.1.3","path":"section-2.1.html#sec:programs","title":"Programs"},"subsections":[]}]},{"section":{"id":"sec:invariants-preconditions-and-postconditions","level":"2","number":"2.2","path":"section-2.2.html#sec:invariants-preconditions-and-postconditions","title":"Invariants, preconditions, and postconditions"},"subsections":[{"section":{"id":"sec:invariants","level":"4","number":null,"path":"section-2.2.html#sec:invariants","title":"Invariants"},"subsections":[]},{"section":{"id":"sec:preconditions-and-postconditions","level":"4","number":null,"path":"section-2.2.html#sec:preconditions-and-postconditions","title":"Preconditions and postconditions"},"subsections":[]},{"section":{"id":"sec:example-binary-search-1","level":"4","number":null,"path":"section-2.2.html#sec:example-binary-search-1","title":"Example: Binary search"},"subsections":[]}]},{"section":{"id":"sec:comparing-algorithms","level":"2","number":"2.3","path":"section-2.3.html#sec:comparing-algorithms","title":"Comparing algorithms"},"subsections":[{"section":{"id":"sec:input-size","level":"3","number":"2.3.1","path":"section-2.3.html#sec:input-size","title":"Basic operations and input size"},"subsections":[{"section":{"id":"sec:example-largest-value-in-an-array","level":"4","number":null,"path":"section-2.3.html#sec:example-largest-value-in-an-array","title":"Example: Largest value in an array"},"subsections":[]}]}]},{"section":{"id":"sec:growth-rates","level":"2","number":"2.4","path":"section-2.4.html#sec:growth-rates","title":"Growth rates"},"subsections":[{"section":{"id":"sec:getting-a-faster-computer","level":"3","number":"2.4.1","path":"section-2.4.html#sec:getting-a-faster-computer","title":"Getting a faster computer"},"subsections":[]},{"section":{"id":"sec:comparing-different-growth-rates","level":"3","number":"2.4.2","path":"section-2.4.html#sec:comparing-different-growth-rates","title":"Comparing different growth rates"},"subsections":[]}]},{"section":{"id":"sec:best-worst-and-average-cases","level":"2","number":"2.5","path":"section-2.5.html#sec:best-worst-and-average-cases","title":"Best, worst, and average cases"},"subsections":[{"section":{"id":"sec:the-problem-with-average-case","level":"3","number":"2.5.1","path":"section-2.5.html#sec:the-problem-with-average-case","title":"The problem with average case"},"subsections":[]}]},{"section":{"id":"sec:asymptotic-analysis","level":"2","number":"2.6","path":"section-2.6.html#sec:asymptotic-analysis","title":"Asymptotic analysis"},"subsections":[{"section":{"id":"sec:orders-of-growth","level":"3","number":"2.6.1","path":"section-2.6.html#sec:orders-of-growth","title":"Orders of growth"},"subsections":[]},{"section":{"id":"sec:should-we-use-o-omega-or-theta","level":"3","number":"2.6.2","path":"section-2.6.html#sec:should-we-use-o-omega-or-theta","title":"Should we use O, \\Omega or \\Theta?"},"subsections":[]}]},{"section":{"id":"sec:algorithm-analysis-in-practice","level":"2","number":"2.7","path":"section-2.7.html#sec:algorithm-analysis-in-practice","title":"Algorithm analysis in practice"},"subsections":[{"section":{"id":"sec:simplification-rules","level":"3","number":"2.7.1","path":"section-2.7.html#sec:simplification-rules","title":"Simplification rules"},"subsections":[]},{"section":{"id":"sec:the-complexity-hierarchy","level":"3","number":"2.7.2","path":"section-2.7.html#sec:the-complexity-hierarchy","title":"The complexity hierarchy"},"subsections":[]},{"section":{"id":"sec:analysing-code-fragments","level":"3","number":"2.7.3","path":"section-2.7.html#sec:analysing-code-fragments","title":"Analysing code fragments"},"subsections":[{"section":{"id":"sec:atomic-operations","level":"4","number":null,"path":"section-2.7.html#sec:atomic-operations","title":"Atomic operations"},"subsections":[]},{"section":{"id":"sec:sequence-of-operations","level":"4","number":null,"path":"section-2.7.html#sec:sequence-of-operations","title":"Sequence of operations"},"subsections":[]},{"section":{"id":"sec:loops-and-iterations","level":"4","number":null,"path":"section-2.7.html#sec:loops-and-iterations","title":"Loops and iterations"},"subsections":[]}]},{"section":{"id":"sec:alg-analysis-examples","level":"3","number":"2.7.4","path":"section-2.7.html#sec:alg-analysis-examples","title":"Examples of algorithm analysis"},"subsections":[{"section":{"id":"sec:example-simple-assignment","level":"4","number":null,"path":"section-2.7.html#sec:example-simple-assignment","title":"Example: Simple assignment"},"subsections":[]},{"section":{"id":"sec:example-simple-for-loop","level":"4","number":null,"path":"section-2.7.html#sec:example-simple-for-loop","title":"Example: Simple for-loop"},"subsections":[]}]},{"section":{"id":"sec:advanced-algorithm-analysis","level":"3","number":"2.7.5","path":"section-2.7.html#sec:advanced-algorithm-analysis","title":"Advanced algorithm analysis"},"subsections":[{"section":{"id":"sec:example-a-nested-loop-with-linear-complexity","level":"4","number":null,"path":"section-2.7.html#sec:example-a-nested-loop-with-linear-complexity","title":"Example: A nested loop with linear complexity"},"subsections":[]}]},{"section":{"id":"sec:other-control-statements","level":"3","number":"2.7.6","path":"section-2.7.html#sec:other-control-statements","title":"Other control statements"},"subsections":[]},{"section":{"id":"sec:recursive-functions","level":"3","number":"2.7.7","path":"section-2.7.html#sec:recursive-functions","title":"Recursive functions"},"subsections":[]}]},{"section":{"id":"sec:case-study-analysing-binary-search","level":"2","number":"2.8","path":"section-2.8.html#sec:case-study-analysing-binary-search","title":"Case study: Analysing binary search"},"subsections":[{"section":{"id":"sec:complexity-of-binary-search","level":"3","number":"2.8.1","path":"section-2.8.html#sec:complexity-of-binary-search","title":"Complexity of binary search"},"subsections":[]}]},{"section":{"id":"sec:code-tuning","level":"2","number":"2.9","path":"section-2.9.html#sec:code-tuning","title":"Code tuning"},"subsections":[]},{"section":{"id":"sec:empirical-analysis","level":"2","number":"2.10","path":"section-2.10.html#sec:empirical-analysis","title":"Empirical analysis"},"subsections":[]},{"section":{"id":"sec:ch02-review","level":"2","number":"2.11","path":"section-2.11.html#sec:ch02-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-introduction","level":"3","number":"2.11.1","path":"section-2.11.html#sec:review-questions-introduction","title":"Review questions: Introduction"},"subsections":[]},{"section":{"id":"sec:review-questions-growth-rates","level":"3","number":"2.11.2","path":"section-2.11.html#sec:review-questions-growth-rates","title":"Review questions: Growth rates"},"subsections":[]},{"section":{"id":"sec:review-questions-running-time","level":"3","number":"2.11.3","path":"section-2.11.html#sec:review-questions-running-time","title":"Review questions: Running time"},"subsections":[]}]}]},{"section":{"id":"sec:sorting-simple","level":"1","number":"3","path":"section-3.html#sec:sorting-simple","title":"Sorting, part 1: Simple algorithms"},"subsections":[{"section":{"id":"sec:terminology-and-notation","level":"2","number":"3.1","path":"section-3.1.html#sec:terminology-and-notation","title":"Terminology and notation"},"subsections":[{"section":{"id":"sec:comparing-algorithms-1","level":"3","number":"3.1.1","path":"section-3.1.html#sec:comparing-algorithms-1","title":"Comparing algorithms"},"subsections":[]},{"section":{"id":"sec:terminology","level":"3","number":"3.1.2","path":"section-3.1.html#sec:terminology","title":"Terminology"},"subsections":[]}]},{"section":{"id":"sec:comparing-values","level":"2","number":"3.2","path":"section-3.2.html#sec:comparing-values","title":"Comparing values"},"subsections":[{"section":{"id":"sec:two-main-approaches-to-comparing-values","level":"3","number":"3.2.1","path":"section-3.2.html#sec:two-main-approaches-to-comparing-values","title":"Two main approaches to comparing values"},"subsections":[]},{"section":{"id":"sec:natural-vs-key-based-comparison","level":"3","number":"3.2.2","path":"section-3.2.html#sec:natural-vs-key-based-comparison","title":"Natural vs key-based comparison"},"subsections":[]}]},{"section":{"id":"sec:overview-of-algorithms","level":"2","number":"3.3","path":"section-3.3.html#sec:overview-of-algorithms","title":"Overview of algorithms"},"subsections":[{"section":{"id":"sec:bubble-sort-overview","level":"3","number":"3.3.1","path":"section-3.3.html#sec:bubble-sort-overview","title":"Bubble sort overview"},"subsections":[]},{"section":{"id":"sec:selection-sort-overview","level":"3","number":"3.3.2","path":"section-3.3.html#sec:selection-sort-overview","title":"Selection sort overview"},"subsections":[]},{"section":{"id":"sec:insertion-sort-overview","level":"3","number":"3.3.3","path":"section-3.3.html#sec:insertion-sort-overview","title":"Insertion sort overview"},"subsections":[]},{"section":{"id":"sec:summary","level":"3","number":"3.3.4","path":"section-3.3.html#sec:summary","title":"Summary"},"subsections":[]}]},{"section":{"id":"sec:bubble-sort","level":"2","number":"3.4","path":"section-3.4.html#sec:bubble-sort","title":"Bubble sort"},"subsections":[{"section":{"id":"sec:bubble-sort-visualisation","level":"4","number":null,"path":"section-3.4.html#sec:bubble-sort-visualisation","title":"Bubble sort visualisation"},"subsections":[]},{"section":{"id":"sec:bubble-sort-analysis","level":"3","number":"3.4.1","path":"section-3.4.html#sec:bubble-sort-analysis","title":"Bubble sort analysis"},"subsections":[]}]},{"section":{"id":"sec:selection-sort","level":"2","number":"3.5","path":"section-3.5.html#sec:selection-sort","title":"Selection sort"},"subsections":[{"section":{"id":"sec:selection-sort-visualisation","level":"4","number":null,"path":"section-3.5.html#sec:selection-sort-visualisation","title":"Selection sort visualisation"},"subsections":[]},{"section":{"id":"sec:selection-sort-analysis","level":"3","number":"3.5.1","path":"section-3.5.html#sec:selection-sort-analysis","title":"Selection sort analysis"},"subsections":[]}]},{"section":{"id":"sec:insertion-sort","level":"2","number":"3.6","path":"section-3.6.html#sec:insertion-sort","title":"Insertion sort"},"subsections":[{"section":{"id":"sec:insertion-sort-visualisation","level":"4","number":null,"path":"section-3.6.html#sec:insertion-sort-visualisation","title":"Insertion sort visualisation"},"subsections":[]},{"section":{"id":"sec:insertion-sort-analysis","level":"3","number":"3.6.1","path":"section-3.6.html#sec:insertion-sort-analysis","title":"Insertion sort analysis"},"subsections":[]}]},{"section":{"id":"sec:summary-analysis-of-basic-sorting-algorithms","level":"2","number":"3.7","path":"section-3.7.html#sec:summary-analysis-of-basic-sorting-algorithms","title":"Summary analysis of basic sorting algorithms"},"subsections":[{"section":{"id":"sec:inversions-and-the-reason-for-the-quadratic-behaviour","level":"3","number":"3.7.1","path":"section-3.7.html#sec:inversions-and-the-reason-for-the-quadratic-behaviour","title":"Inversions and the reason for the quadratic behaviour"},"subsections":[]}]},{"section":{"id":"sec:empirical-analysis-and-code-tuning","level":"2","number":"3.8","path":"section-3.8.html#sec:empirical-analysis-and-code-tuning","title":"Empirical analysis and code tuning"},"subsections":[]},{"section":{"id":"sec:ch03-review","level":"2","number":"3.9","path":"section-3.9.html#sec:ch03-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-terminology","level":"3","number":"3.9.1","path":"section-3.9.html#sec:review-questions-terminology","title":"Review questions: Terminology"},"subsections":[]},{"section":{"id":"sec:review-questions-bubble-sort","level":"3","number":"3.9.2","path":"section-3.9.html#sec:review-questions-bubble-sort","title":"Review questions: Bubble sort"},"subsections":[]},{"section":{"id":"sec:review-questions-selection-sort","level":"3","number":"3.9.3","path":"section-3.9.html#sec:review-questions-selection-sort","title":"Review questions: Selection sort"},"subsections":[]},{"section":{"id":"sec:review-questions-insertion-sort","level":"3","number":"3.9.4","path":"section-3.9.html#sec:review-questions-insertion-sort","title":"Review questions: Insertion sort"},"subsections":[]},{"section":{"id":"sec:review-questions-exchange-sort","level":"3","number":"3.9.5","path":"section-3.9.html#sec:review-questions-exchange-sort","title":"Review questions: Exchange sort"},"subsections":[]}]}]},{"section":{"id":"sec:sorting-divide-and-conquer","level":"1","number":"4","path":"section-4.html#sec:sorting-divide-and-conquer","title":"Sorting, part 2: Divide-and-conquer algorithms"},"subsections":[{"section":{"id":"sec:recursion-and-divide-and-conquer","level":"2","number":"4.1","path":"section-4.1.html#sec:recursion-and-divide-and-conquer","title":"Recursion and divide-and-conquer"},"subsections":[{"section":{"id":"sec:recursion","level":"3","number":"4.1.1","path":"section-4.1.html#sec:recursion","title":"Recursion"},"subsections":[{"section":{"id":"sec:example-the-fibonacci-sequence","level":"4","number":null,"path":"section-4.1.html#sec:example-the-fibonacci-sequence","title":"Example: The Fibonacci sequence"},"subsections":[]}]},{"section":{"id":"sec:divide-and-conquer","level":"3","number":"4.1.2","path":"section-4.1.html#sec:divide-and-conquer","title":"Divide and conquer"},"subsections":[]}]},{"section":{"id":"sec:mergesort","level":"2","number":"4.2","path":"section-4.2.html#sec:mergesort","title":"Mergesort"},"subsections":[{"section":{"id":"sec:merge","level":"4","number":null,"path":"section-4.2.html#sec:merge","title":"Merge"},"subsections":[]},{"section":{"id":"sec:complexity-analysis","level":"3","number":"4.2.2","path":"section-4.2.html#sec:complexity-analysis","title":"Complexity analysis"},"subsections":[]}]},{"section":{"id":"sec:implementing-mergesort","level":"2","number":"4.3","path":"section-4.3.html#sec:implementing-mergesort","title":"Implementing Mergesort"},"subsections":[]},{"section":{"id":"sec:quicksort","level":"2","number":"4.4","path":"section-4.4.html#sec:quicksort","title":"Quicksort"},"subsections":[{"section":{"id":"sec:partition","level":"3","number":"4.4.1","path":"section-4.4.html#sec:partition","title":"Partition"},"subsections":[{"section":{"id":"sec:putting-it-together","level":"4","number":null,"path":"section-4.4.html#sec:putting-it-together","title":"Putting it together"},"subsections":[]}]},{"section":{"id":"sec:complexity-analysis-1","level":"3","number":"4.4.2","path":"section-4.4.html#sec:complexity-analysis-1","title":"Complexity analysis"},"subsections":[{"section":{"id":"sec:best-case-complexity","level":"4","number":null,"path":"section-4.4.html#sec:best-case-complexity","title":"Best-case complexity"},"subsections":[]},{"section":{"id":"sec:average-case-complexity","level":"4","number":null,"path":"section-4.4.html#sec:average-case-complexity","title":"Average-case complexity"},"subsections":[]}]}]},{"section":{"id":"sec:implementing-quicksort","level":"2","number":"4.5","path":"section-4.5.html#sec:implementing-quicksort","title":"Implementing Quicksort"},"subsections":[{"section":{"id":"sec:partition-1","level":"3","number":"4.5.1","path":"section-4.5.html#sec:partition-1","title":"Partition"},"subsections":[{"section":{"id":"sec:an-alternative-partitioning-algorithm","level":"4","number":null,"path":"section-4.5.html#sec:an-alternative-partitioning-algorithm","title":"An alternative partitioning algorithm"},"subsections":[]}]},{"section":{"id":"sec:selecting-the-pivot","level":"3","number":"4.5.2","path":"section-4.5.html#sec:selecting-the-pivot","title":"Selecting the pivot"},"subsections":[{"section":{"id":"sec:first-or-last-element","level":"4","number":null,"path":"section-4.5.html#sec:first-or-last-element","title":"First or last element"},"subsections":[]},{"section":{"id":"sec:middle-element","level":"4","number":null,"path":"section-4.5.html#sec:middle-element","title":"Middle element"},"subsections":[]},{"section":{"id":"sec:median-of-three","level":"4","number":null,"path":"section-4.5.html#sec:median-of-three","title":"Median-of-three"},"subsections":[]},{"section":{"id":"sec:random-pivot","level":"4","number":null,"path":"section-4.5.html#sec:random-pivot","title":"Random pivot"},"subsections":[]}]},{"section":{"id":"sec:more-practical-improvements","level":"3","number":"4.5.3","path":"section-4.5.html#sec:more-practical-improvements","title":"More practical improvements"},"subsections":[{"section":{"id":"sec:backing-off-to-insertion-sort","level":"4","number":null,"path":"section-4.5.html#sec:backing-off-to-insertion-sort","title":"Backing off to Insertion sort"},"subsections":[]}]}]},{"section":{"id":"sec:empirical-comparison-of-sorting-algorithms","level":"2","number":"4.6","path":"section-4.6.html#sec:empirical-comparison-of-sorting-algorithms","title":"Empirical comparison of sorting algorithms"},"subsections":[]},{"section":{"id":"sec:ch04-review","level":"2","number":"4.7","path":"section-4.7.html#sec:ch04-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-mergesort","level":"3","number":"4.7.1","path":"section-4.7.html#sec:review-questions-mergesort","title":"Review questions: Mergesort"},"subsections":[]},{"section":{"id":"sec:review-questions-quicksort","level":"3","number":"4.7.2","path":"section-4.7.html#sec:review-questions-quicksort","title":"Review questions: Quicksort"},"subsections":[]},{"section":{"id":"sec:review-questions-comparison-of-sorting-algorithms","level":"3","number":"4.7.3","path":"section-4.7.html#sec:review-questions-comparison-of-sorting-algorithms","title":"Review questions: Comparison of sorting algorithms"},"subsections":[]}]}]},{"section":{"id":"sec:algorithm-analysis-theory","level":"1","number":"5","path":"section-5.html#sec:algorithm-analysis-theory","title":"Algorithm analysis, part 2: Theory"},"subsections":[{"section":{"id":"sec:upper-bounds-the-big-o-notation","level":"2","number":"5.1","path":"section-5.1.html#sec:upper-bounds-the-big-o-notation","title":"Upper bounds: the big-O notation"},"subsections":[{"section":{"id":"sec:formal-definition","level":"3","number":"5.1.1","path":"section-5.1.html#sec:formal-definition","title":"Formal definition"},"subsections":[{"section":{"id":"sec:example-comparing-two-functions","level":"4","number":null,"path":"section-5.1.html#sec:example-comparing-two-functions","title":"Example: Comparing two functions"},"subsections":[]},{"section":{"id":"sec:example-quadratic-algorithm","level":"4","number":null,"path":"section-5.1.html#sec:example-quadratic-algorithm","title":"Example: Quadratic algorithm"},"subsections":[]}]},{"section":{"id":"sec:simplifying-rules","level":"3","number":"5.1.2","path":"section-5.1.html#sec:simplifying-rules","title":"Simplifying rules"},"subsections":[]},{"section":{"id":"sec:big-o-and-logarithms","level":"3","number":"5.1.3","path":"section-5.1.html#sec:big-o-and-logarithms","title":"big-O and logarithms"},"subsections":[]}]},{"section":{"id":"sec:lower-bounds-and-tight-bounds","level":"2","number":"5.2","path":"section-5.2.html#sec:lower-bounds-and-tight-bounds","title":"Lower bounds and tight bounds"},"subsections":[]},{"section":{"id":"sec:analysing-problems","level":"2","number":"5.3","path":"section-5.3.html#sec:analysing-problems","title":"Analysing problems"},"subsections":[{"section":{"id":"sec:lower-bounds-for-sorting","level":"3","number":"5.3.1","path":"section-5.3.html#sec:lower-bounds-for-sorting","title":"Case study: Lower bounds for sorting"},"subsections":[]}]},{"section":{"id":"sec:common-misunderstandings","level":"2","number":"5.4","path":"section-5.4.html#sec:common-misunderstandings","title":"Common misunderstandings"},"subsections":[{"section":{"id":"sec:example-best-case-for-sequential-search","level":"4","number":null,"path":"section-5.4.html#sec:example-best-case-for-sequential-search","title":"Example: Best case for sequential search"},"subsections":[]},{"section":{"id":"sec:best-case-upper-bound-or-worst-case-lower-bound","level":"3","number":"5.4.1","path":"section-5.4.html#sec:best-case-upper-bound-or-worst-case-lower-bound","title":"Best-case upper bound, or worst-case lower bound?"},"subsections":[]}]},{"section":{"id":"sec:ch05-review","level":"2","number":"5.5","path":"section-5.5.html#sec:ch05-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-upper-bounds","level":"3","number":"5.5.1","path":"section-5.5.html#sec:review-questions-upper-bounds","title":"Review questions: Upper bounds"},"subsections":[]},{"section":{"id":"sec:review-questions-asymptotic-notations","level":"3","number":"5.5.2","path":"section-5.5.html#sec:review-questions-asymptotic-notations","title":"Review questions: Asymptotic notations"},"subsections":[]},{"section":{"id":"sec:review-questions-analysing-problems","level":"3","number":"5.5.3","path":"section-5.5.html#sec:review-questions-analysing-problems","title":"Review questions: Analysing problems"},"subsections":[]},{"section":{"id":"sec:review-questions-common-misunderstandings","level":"3","number":"5.5.4","path":"section-5.5.html#sec:review-questions-common-misunderstandings","title":"Review questions: Common misunderstandings"},"subsections":[]}]}]},{"section":{"id":"sec:stacks-queues-and-lists","level":"1","number":"6","path":"section-6.html#sec:stacks-queues-and-lists","title":"Stacks, queues, and lists"},"subsections":[{"section":{"id":"sec:collections","level":"2","number":"6.1","path":"section-6.1.html#sec:collections","title":"Collections"},"subsections":[{"section":{"id":"sec:what-is-a-sequence","level":"3","number":"6.1.1","path":"section-6.1.html#sec:what-is-a-sequence","title":"What is a sequence?"},"subsections":[]}]},{"section":{"id":"sec:stacks-and-queues","level":"2","number":"6.2","path":"section-6.2.html#sec:stacks-and-queues","title":"Stacks and queues"},"subsections":[{"section":{"id":"sec:adt-for-stacks","level":"4","number":null,"path":"section-6.2.html#sec:adt-for-stacks","title":"ADT for stacks"},"subsections":[]},{"section":{"id":"sec:adt-for-queues","level":"4","number":null,"path":"section-6.2.html#sec:adt-for-queues","title":"ADT for queues"},"subsections":[]},{"section":{"id":"sec:case-study-implementing-recursion","level":"3","number":"6.2.1","path":"section-6.2.html#sec:case-study-implementing-recursion","title":"Case study: Implementing recursion"},"subsections":[]}]},{"section":{"id":"sec:stacks-implemented-as-linked-lists","level":"2","number":"6.3","path":"section-6.3.html#sec:stacks-implemented-as-linked-lists","title":"Stacks implemented as linked lists"},"subsections":[{"section":{"id":"sec:linked-list-nodes","level":"4","number":null,"path":"section-6.3.html#sec:linked-list-nodes","title":"Linked list nodes"},"subsections":[]},{"section":{"id":"sec:linked-stacks","level":"4","number":null,"path":"section-6.3.html#sec:linked-stacks","title":"Linked stacks"},"subsections":[]}]},{"section":{"id":"sec:queues-implemented-as-linked-lists","level":"2","number":"6.4","path":"section-6.4.html#sec:queues-implemented-as-linked-lists","title":"Queues implemented as linked lists"},"subsections":[{"section":{"id":"sec:case-study-sorting-a-linked-list-using-mergesort","level":"3","number":"6.4.1","path":"section-6.4.html#sec:case-study-sorting-a-linked-list-using-mergesort","title":"Case study: Sorting a linked list using Mergesort"},"subsections":[]}]},{"section":{"id":"sec:stacks-implemented-using-arrays","level":"2","number":"6.5","path":"section-6.5.html#sec:stacks-implemented-using-arrays","title":"Stacks implemented using arrays"},"subsections":[{"section":{"id":"sec:example-implementing-two-stacks-using-one-array","level":"4","number":null,"path":"section-6.5.html#sec:example-implementing-two-stacks-using-one-array","title":"Example: Implementing two stacks using one array"},"subsections":[]}]},{"section":{"id":"sec:queues-implemented-using-arrays","level":"2","number":"6.6","path":"section-6.6.html#sec:queues-implemented-using-arrays","title":"Queues implemented using arrays"},"subsections":[{"section":{"id":"sec:circular-queues","level":"3","number":"6.6.1","path":"section-6.6.html#sec:circular-queues","title":"Circular queues"},"subsections":[{"section":{"id":"sec:enqueueing-and-dequeueing","level":"4","number":null,"path":"section-6.6.html#sec:enqueueing-and-dequeueing","title":"Enqueueing and dequeueing"},"subsections":[]}]}]},{"section":{"id":"sec:dynamic-arrays","level":"2","number":"6.7","path":"section-6.7.html#sec:dynamic-arrays","title":"Dynamic arrays"},"subsections":[{"section":{"id":"sec:resizing-the-internal-array","level":"3","number":"6.7.1","path":"section-6.7.html#sec:resizing-the-internal-array","title":"Resizing the internal array"},"subsections":[]},{"section":{"id":"sec:how-much-to-increase-the-array-size","level":"3","number":"6.7.2","path":"section-6.7.html#sec:how-much-to-increase-the-array-size","title":"How much to increase the array size"},"subsections":[{"section":{"id":"sec:growing-by-a-constant-amount","level":"4","number":null,"path":"section-6.7.html#sec:growing-by-a-constant-amount","title":"Growing by a constant amount"},"subsections":[]},{"section":{"id":"sec:growing-by-a-constant-factor","level":"4","number":null,"path":"section-6.7.html#sec:growing-by-a-constant-factor","title":"Growing by a constant factor"},"subsections":[]},{"section":{"id":"sec:theorem-array-doubling","level":"4","number":null,"path":"section-6.7.html#sec:theorem-array-doubling","title":"Theorem: Array-doubling"},"subsections":[]}]},{"section":{"id":"sec:resizing-an-array-based-queue","level":"3","number":"6.7.3","path":"section-6.7.html#sec:resizing-an-array-based-queue","title":"Resizing an array-based queue"},"subsections":[]},{"section":{"id":"sec:shrinking-the-internal-array","level":"3","number":"6.7.4","path":"section-6.7.html#sec:shrinking-the-internal-array","title":"Shrinking the internal array"},"subsections":[]}]},{"section":{"id":"sec:comparison-of-linked-lists-vs-dynamic-arrays","level":"2","number":"6.8","path":"section-6.8.html#sec:comparison-of-linked-lists-vs-dynamic-arrays","title":"Comparison of linked lists vs dynamic arrays"},"subsections":[{"section":{"id":"sec:time-complexity","level":"4","number":null,"path":"section-6.8.html#sec:time-complexity","title":"Time complexity"},"subsections":[]},{"section":{"id":"sec:memory-usage","level":"4","number":null,"path":"section-6.8.html#sec:memory-usage","title":"Memory usage"},"subsections":[]}]},{"section":{"id":"sec:double-ended-queues","level":"2","number":"6.9","path":"section-6.9.html#sec:double-ended-queues","title":"Double-ended queues"},"subsections":[]},{"section":{"id":"sec:general-lists","level":"2","number":"6.10","path":"section-6.10.html#sec:general-lists","title":"General lists"},"subsections":[]},{"section":{"id":"sec:priority-queues","level":"2","number":"6.11","path":"section-6.11.html#sec:priority-queues","title":"Priority queues"},"subsections":[{"section":{"id":"sec:adt-for-priority-queues","level":"3","number":"6.11.1","path":"section-6.11.html#sec:adt-for-priority-queues","title":"ADT for priority queues"},"subsections":[]},{"section":{"id":"sec:use-cases-for-priority-queues","level":"3","number":"6.11.2","path":"section-6.11.html#sec:use-cases-for-priority-queues","title":"Use cases for priority queues"},"subsections":[{"section":{"id":"sec:example-sorting","level":"4","number":null,"path":"section-6.11.html#sec:example-sorting","title":"Example: Sorting"},"subsections":[]},{"section":{"id":"sec:example-finding-the-top-100-items","level":"4","number":null,"path":"section-6.11.html#sec:example-finding-the-top-100-items","title":"Example: Finding the top 100 items"},"subsections":[]}]},{"section":{"id":"sec:implementing-priority-queues-using-sorted-lists","level":"3","number":"6.11.3","path":"section-6.11.html#sec:implementing-priority-queues-using-sorted-lists","title":"Implementing priority queues using sorted lists"},"subsections":[]}]},{"section":{"id":"sec:ch06-review","level":"2","number":"6.12","path":"section-6.12.html#sec:ch06-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-stacks-and-queues","level":"3","number":"6.12.1","path":"section-6.12.html#sec:review-questions-stacks-and-queues","title":"Review questions: Stacks and queues"},"subsections":[]},{"section":{"id":"sec:review-questions-linked-lists","level":"3","number":"6.12.2","path":"section-6.12.html#sec:review-questions-linked-lists","title":"Review questions: Linked lists"},"subsections":[]},{"section":{"id":"sec:review-questions-static-array-based-lists","level":"3","number":"6.12.3","path":"section-6.12.html#sec:review-questions-static-array-based-lists","title":"Review questions: Static array-based lists"},"subsections":[]},{"section":{"id":"sec:summary-questions","level":"3","number":"6.12.4","path":"section-6.12.html#sec:summary-questions","title":"Summary questions"},"subsections":[]}]}]},{"section":{"id":"sec:algorithm-analysis-part-3-advanced-theory","level":"1","number":"7","path":"section-7.html#sec:algorithm-analysis-part-3-advanced-theory","title":"Algorithm analysis, part 3: Advanced theory"},"subsections":[{"section":{"id":"sec:space-bounds","level":"2","number":"7.1","path":"section-7.1.html#sec:space-bounds","title":"Space bounds"},"subsections":[{"section":{"id":"sec:space-complexity-of-data-structures","level":"3","number":"7.1.1","path":"section-7.1.html#sec:space-complexity-of-data-structures","title":"Space complexity of data structures"},"subsections":[{"section":{"id":"sec:example-arrays-and-linked-lists","level":"4","number":null,"path":"section-7.1.html#sec:example-arrays-and-linked-lists","title":"Example: Arrays and linked lists"},"subsections":[]}]},{"section":{"id":"sec:space-complexity-of-algorithms","level":"3","number":"7.1.2","path":"section-7.1.html#sec:space-complexity-of-algorithms","title":"Space complexity of algorithms"},"subsections":[{"section":{"id":"sec:example-mergesort","level":"4","number":null,"path":"section-7.1.html#sec:example-mergesort","title":"Example: Mergesort"},"subsections":[]}]},{"section":{"id":"sec:space-time-tradeoff","level":"3","number":"7.1.3","path":"section-7.1.html#sec:space-time-tradeoff","title":"Space/time tradeoff"},"subsections":[]}]},{"section":{"id":"sec:amortised-analysis","level":"2","number":"7.2","path":"section-7.2.html#sec:amortised-analysis","title":"Amortised analysis"},"subsections":[{"section":{"id":"sec:example-multipop-on-stacks","level":"4","number":null,"path":"section-7.2.html#sec:example-multipop-on-stacks","title":"Example: Multipop on stacks"},"subsections":[]}]},{"section":{"id":"sec:case-study-analysing-dynamic-arrays","level":"2","number":"7.3","path":"section-7.3.html#sec:case-study-analysing-dynamic-arrays","title":"Case study: Analysing dynamic arrays"},"subsections":[{"section":{"id":"sec:complexity-of-adding-an-element-to-a-dynamic-array","level":"4","number":null,"path":"section-7.3.html#sec:complexity-of-adding-an-element-to-a-dynamic-array","title":"Complexity of adding an element to a dynamic array"},"subsections":[]},{"section":{"id":"sec:memory-complexity-of-dynamic-arrays","level":"4","number":null,"path":"section-7.3.html#sec:memory-complexity-of-dynamic-arrays","title":"Memory complexity of dynamic arrays"},"subsections":[]}]},{"section":{"id":"sec:recur-relations","level":"2","number":"7.4","path":"section-7.4.html#sec:recur-relations","title":"Recurrence relations"},"subsections":[]},{"section":{"id":"sec:multiple-parameters","level":"2","number":"7.5","path":"section-7.5.html#sec:multiple-parameters","title":"Multiple parameters"},"subsections":[]}]},{"section":{"id":"sec:trees","level":"1","number":"8","path":"section-8.html#sec:trees","title":"Trees"},"subsections":[{"section":{"id":"sec:binary-trees","level":"2","number":"8.1","path":"section-8.1.html#sec:binary-trees","title":"Binary trees"},"subsections":[{"section":{"id":"sec:binary-trees-are-recursive-data-structures","level":"3","number":"8.1.1","path":"section-8.1.html#sec:binary-trees-are-recursive-data-structures","title":"Binary trees are recursive data structures"},"subsections":[]}]},{"section":{"id":"sec:case-study-full-binary-trees","level":"2","number":"8.2","path":"section-8.2.html#sec:case-study-full-binary-trees","title":"Case study: Full binary trees"},"subsections":[]},{"section":{"id":"sec:implementing-binary-trees","level":"2","number":"8.3","path":"section-8.3.html#sec:implementing-binary-trees","title":"Implementing binary trees"},"subsections":[{"section":{"id":"sec:binary-trees-1","level":"4","number":null,"path":"section-8.3.html#sec:binary-trees-1","title":"Binary trees"},"subsections":[]},{"section":{"id":"sec:differentiating-between-internal-nodes-and-leaves","level":"3","number":"8.3.1","path":"section-8.3.html#sec:differentiating-between-internal-nodes-and-leaves","title":"Differentiating between internal nodes and leaves"},"subsections":[]},{"section":{"id":"sec:space-requirements","level":"3","number":"8.3.2","path":"section-8.3.html#sec:space-requirements","title":"Space requirements"},"subsections":[]}]},{"section":{"id":"sec:traversing-a-binary-tree","level":"2","number":"8.4","path":"section-8.4.html#sec:traversing-a-binary-tree","title":"Traversing a binary tree"},"subsections":[{"section":{"id":"sec:preorder-postorder-and-inorder","level":"3","number":"8.4.1","path":"section-8.4.html#sec:preorder-postorder-and-inorder","title":"Preorder, postorder and inorder"},"subsections":[]},{"section":{"id":"sec:traversing-implementation","level":"3","number":"8.4.2","path":"section-8.4.html#sec:traversing-implementation","title":"Implementation"},"subsections":[]}]},{"section":{"id":"sec:iteration-recursion-and-information-flow","level":"2","number":"8.5","path":"section-8.5.html#sec:iteration-recursion-and-information-flow","title":"Iteration, recursion, and information flow"},"subsections":[]},{"section":{"id":"sec:general-trees","level":"2","number":"8.6","path":"section-8.6.html#sec:general-trees","title":"General trees"},"subsections":[{"section":{"id":"sec:definitions-and-terminology","level":"3","number":"8.6.1","path":"section-8.6.html#sec:definitions-and-terminology","title":"Definitions and terminology"},"subsections":[]},{"section":{"id":"sec:adt-for-general-trees","level":"3","number":"8.6.2","path":"section-8.6.html#sec:adt-for-general-trees","title":"ADT for general trees"},"subsections":[]},{"section":{"id":"sec:traversing-a-general-tree","level":"3","number":"8.6.3","path":"section-8.6.html#sec:traversing-a-general-tree","title":"Traversing a general tree"},"subsections":[]},{"section":{"id":"sec:sequential-tree-representations","level":"3","number":"8.6.4","path":"section-8.6.html#sec:sequential-tree-representations","title":"Sequential tree representations"},"subsections":[]}]},{"section":{"id":"sec:ch08-review","level":"2","number":"8.7","path":"section-8.7.html#sec:ch08-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-binary-tree-definition","level":"3","number":"8.7.1","path":"section-8.7.html#sec:review-questions-binary-tree-definition","title":"Review questions: Binary tree definition"},"subsections":[]},{"section":{"id":"sec:review-questions-example-binary-tree","level":"3","number":"8.7.2","path":"section-8.7.html#sec:review-questions-example-binary-tree","title":"Review questions: Example binary tree"},"subsections":[]},{"section":{"id":"sec:review-questions-binary-tree-traversals","level":"3","number":"8.7.3","path":"section-8.7.html#sec:review-questions-binary-tree-traversals","title":"Review questions: Binary tree traversals"},"subsections":[]}]}]},{"section":{"id":"sec:priority-queues-and-heaps","level":"1","number":"9","path":"section-9.html#sec:priority-queues-and-heaps","title":"Priority queues and heaps"},"subsections":[{"section":{"id":"sec:implementing-priority-queues-using-binary-trees","level":"2","number":"9.1","path":"section-9.1.html#sec:implementing-priority-queues-using-binary-trees","title":"Implementing priority queues using binary trees"},"subsections":[{"section":{"id":"sec:the-heap-property","level":"3","number":"9.1.1","path":"section-9.1.html#sec:the-heap-property","title":"The heap property"},"subsections":[]}]},{"section":{"id":"sec:binary-heaps","level":"2","number":"9.2","path":"section-9.2.html#sec:binary-heaps","title":"Binary heaps"},"subsections":[{"section":{"id":"sec:representing-complete-binary-trees-as-arrays","level":"3","number":"9.2.1","path":"section-9.2.html#sec:representing-complete-binary-trees-as-arrays","title":"Representing complete binary trees as arrays"},"subsections":[]},{"section":{"id":"sec:implementing-binary-heaps","level":"3","number":"9.2.2","path":"section-9.2.html#sec:implementing-binary-heaps","title":"Implementing binary heaps"},"subsections":[]},{"section":{"id":"sec:inserting-into-a-heap","level":"3","number":"9.2.3","path":"section-9.2.html#sec:inserting-into-a-heap","title":"Inserting into a heap"},"subsections":[]},{"section":{"id":"sec:removing-from-the-heap","level":"3","number":"9.2.4","path":"section-9.2.html#sec:removing-from-the-heap","title":"Removing from the heap"},"subsections":[]},{"section":{"id":"sec:binary-heaps-as-priority-queues","level":"3","number":"9.2.5","path":"section-9.2.html#sec:binary-heaps-as-priority-queues","title":"Binary heaps as priority queues"},"subsections":[]},{"section":{"id":"sec:changing-the-priority-of-elements","level":"3","number":"9.2.6","path":"section-9.2.html#sec:changing-the-priority-of-elements","title":"Changing the priority of elements"},"subsections":[]},{"section":{"id":"sec:building-a-heap","level":"3","number":"9.2.7","path":"section-9.2.html#sec:building-a-heap","title":"Building a heap"},"subsections":[]}]},{"section":{"id":"sec:case-study-heapsort","level":"2","number":"9.3","path":"section-9.3.html#sec:case-study-heapsort","title":"Case study: Heapsort"},"subsections":[]},{"section":{"id":"sec:case-study-huffman-coding","level":"2","number":"9.4","path":"section-9.4.html#sec:case-study-huffman-coding","title":"Case study: Huffman coding"},"subsections":[]},{"section":{"id":"sec:ch09-review","level":"2","number":"9.5","path":"section-9.5.html#sec:ch09-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-binary-heaps","level":"3","number":"9.5.1","path":"section-9.5.html#sec:review-questions-binary-heaps","title":"Review questions: Binary heaps"},"subsections":[]},{"section":{"id":"sec:review-questions-heapsort","level":"3","number":"9.5.2","path":"section-9.5.html#sec:review-questions-heapsort","title":"Review questions: Heapsort"},"subsections":[]}]}]},{"section":{"id":"sec:sets-and-maps","level":"1","number":"10","path":"section-10.html#sec:sets-and-maps","title":"Sets and maps"},"subsections":[{"section":{"id":"sec:sets-1","level":"2","number":"10.1","path":"section-10.1.html#sec:sets-1","title":"Sets"},"subsections":[{"section":{"id":"sec:example-spell-checking","level":"4","number":null,"path":"section-10.1.html#sec:example-spell-checking","title":"Example: Spell-checking"},"subsections":[]}]},{"section":{"id":"sec:maps-or-dictionaries","level":"2","number":"10.2","path":"section-10.2.html#sec:maps-or-dictionaries","title":"Maps, or dictionaries"},"subsections":[{"section":{"id":"sec:example-cash-register","level":"4","number":null,"path":"section-10.2.html#sec:example-cash-register","title":"Example: Cash register"},"subsections":[]},{"section":{"id":"sec:multimaps","level":"3","number":"10.2.1","path":"section-10.2.html#sec:multimaps","title":"Multimaps"},"subsections":[{"section":{"id":"sec:example-search-engine","level":"4","number":null,"path":"section-10.2.html#sec:example-search-engine","title":"Example: Search engine"},"subsections":[]}]}]},{"section":{"id":"sec:case-study-implementing-sets-using-lists","level":"2","number":"10.3","path":"section-10.3.html#sec:case-study-implementing-sets-using-lists","title":"Case study: Implementing sets using lists"},"subsections":[{"section":{"id":"sec:using-a-linked-list","level":"4","number":null,"path":"section-10.3.html#sec:using-a-linked-list","title":"Using a linked list"},"subsections":[]},{"section":{"id":"sec:linear-complexity","level":"4","number":null,"path":"section-10.3.html#sec:linear-complexity","title":"Linear complexity"},"subsections":[]},{"section":{"id":"sec:using-a-sorted-array","level":"4","number":null,"path":"section-10.3.html#sec:using-a-sorted-array","title":"Using a sorted array"},"subsections":[]},{"section":{"id":"sec:implementing-maps","level":"3","number":"10.3.1","path":"section-10.3.html#sec:implementing-maps","title":"Implementing maps"},"subsections":[{"section":{"id":"sec:using-a-linked-list-1","level":"4","number":null,"path":"section-10.3.html#sec:using-a-linked-list-1","title":"Using a linked list"},"subsections":[]},{"section":{"id":"sec:using-a-sorted-array-1","level":"4","number":null,"path":"section-10.3.html#sec:using-a-sorted-array-1","title":"Using a sorted array"},"subsections":[]}]}]},{"section":{"id":"sec:sorted-sets-and-maps","level":"2","number":"10.4","path":"section-10.4.html#sec:sorted-sets-and-maps","title":"Sorted sets and maps"},"subsections":[{"section":{"id":"sec:sorted-sets","level":"3","number":"10.4.1","path":"section-10.4.html#sec:sorted-sets","title":"Sorted sets"},"subsections":[{"section":{"id":"sec:example-between-x-and-y","level":"4","number":null,"path":"section-10.4.html#sec:example-between-x-and-y","title":"Example: Between X and Y"},"subsections":[]}]},{"section":{"id":"sec:sorted-maps","level":"3","number":"10.4.2","path":"section-10.4.html#sec:sorted-maps","title":"Sorted maps"},"subsections":[{"section":{"id":"sec:example-between-x-and-y-again","level":"4","number":null,"path":"section-10.4.html#sec:example-between-x-and-y-again","title":"Example: Between X and Y (again)"},"subsections":[]},{"section":{"id":"sec:example-small-swedish-towns","level":"4","number":null,"path":"section-10.4.html#sec:example-small-swedish-towns","title":"Example: Small Swedish towns"},"subsections":[]}]}]}]},{"section":{"id":"sec:search-trees","level":"1","number":"11","path":"section-11.html#sec:search-trees","title":"Search trees"},"subsections":[{"section":{"id":"sec:binary-search-trees","level":"2","number":"11.1","path":"section-11.1.html#sec:binary-search-trees","title":"Binary search trees"},"subsections":[{"section":{"id":"sec:searching-in-a-bst","level":"4","number":null,"path":"section-11.1.html#sec:searching-in-a-bst","title":"Searching in a BST"},"subsections":[]},{"section":{"id":"sec:inserting-into-a-bst","level":"4","number":null,"path":"section-11.1.html#sec:inserting-into-a-bst","title":"Inserting into a BST"},"subsections":[]},{"section":{"id":"sec:recursive-search-and-insert","level":"3","number":"11.1.1","path":"section-11.1.html#sec:recursive-search-and-insert","title":"Recursive search and insert"},"subsections":[]},{"section":{"id":"sec:removing-from-a-bst","level":"3","number":"11.1.2","path":"section-11.1.html#sec:removing-from-a-bst","title":"Removing from a BST"},"subsections":[]},{"section":{"id":"sec:analysis","level":"3","number":"11.1.3","path":"section-11.1.html#sec:analysis","title":"Analysis"},"subsections":[]},{"section":{"id":"sec:guided-information-flow","level":"3","number":"11.1.4","path":"section-11.1.html#sec:guided-information-flow","title":"Guided information flow"},"subsections":[{"section":{"id":"sec:example-minimum-value-in-a-tree","level":"4","number":null,"path":"section-11.1.html#sec:example-minimum-value-in-a-tree","title":"Example: Minimum value in a tree"},"subsections":[]}]}]},{"section":{"id":"sec:self-balancing-trees","level":"2","number":"11.2","path":"section-11.2.html#sec:self-balancing-trees","title":"Self-balancing trees"},"subsections":[]},{"section":{"id":"sec:avl-trees","level":"2","number":"11.3","path":"section-11.3.html#sec:avl-trees","title":"AVL trees"},"subsections":[{"section":{"id":"sec:rotations","level":"3","number":"11.3.1","path":"section-11.3.html#sec:rotations","title":"Rotations"},"subsections":[]},{"section":{"id":"sec:avl-tree-insertion","level":"3","number":"11.3.2","path":"section-11.3.html#sec:avl-tree-insertion","title":"AVL tree insertion"},"subsections":[{"section":{"id":"sec:example-avl-insertion","level":"4","number":null,"path":"section-11.3.html#sec:example-avl-insertion","title":"Example: AVL insertion"},"subsections":[]}]}]},{"section":{"id":"sec:splay-trees","level":"2","number":"11.4","path":"section-11.4.html#sec:splay-trees","title":"Splay trees"},"subsections":[]},{"section":{"id":"sec:disjoint-sets","level":"2","number":"11.5","path":"section-11.5.html#sec:disjoint-sets","title":"Disjoint sets and the Union/Find algorithm"},"subsections":[]},{"section":{"id":"sec:skip-lists","level":"2","number":"11.6","path":"section-11.6.html#sec:skip-lists","title":"Skip lists"},"subsections":[]},{"section":{"id":"sec:ch11-review","level":"2","number":"11.7","path":"section-11.7.html#sec:ch11-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-binary-search-trees","level":"3","number":"11.7.1","path":"section-11.7.html#sec:review-questions-binary-search-trees","title":"Review questions: Binary search trees"},"subsections":[]}]}]},{"section":{"id":"sec:hash-tables","level":"1","number":"12","path":"section-12.html#sec:hash-tables","title":"Hash tables"},"subsections":[{"section":{"id":"sec:hash-functions","level":"2","number":"12.1","path":"section-12.1.html#sec:hash-functions","title":"Hash functions"},"subsections":[{"section":{"id":"sec:properties-of-a-hash-function","level":"3","number":"12.1.1","path":"section-12.1.html#sec:properties-of-a-hash-function","title":"Properties of a hash function"},"subsections":[{"section":{"id":"sec:example-the-worst-hash-function","level":"4","number":null,"path":"section-12.1.html#sec:example-the-worst-hash-function","title":"Example: The worst hash function"},"subsections":[]}]},{"section":{"id":"sec:basic-principles-of-hash-functions","level":"3","number":"12.1.2","path":"section-12.1.html#sec:basic-principles-of-hash-functions","title":"Basic principles of hash functions"},"subsections":[{"section":{"id":"sec:integers-characters-and-enumerations","level":"4","number":null,"path":"section-12.1.html#sec:integers-characters-and-enumerations","title":"Integers, characters and enumerations"},"subsections":[]},{"section":{"id":"sec:floating-point-numbers","level":"4","number":null,"path":"section-12.1.html#sec:floating-point-numbers","title":"Floating point numbers"},"subsections":[]},{"section":{"id":"sec:strings-1","level":"4","number":null,"path":"section-12.1.html#sec:strings-1","title":"Strings"},"subsections":[]},{"section":{"id":"sec:horners-method-for-strings-lists-and-other-sequences","level":"4","number":null,"path":"section-12.1.html#sec:horners-method-for-strings-lists-and-other-sequences","title":"Horner’s method for strings, lists and other sequences"},"subsections":[]},{"section":{"id":"sec:complex-values","level":"4","number":null,"path":"section-12.1.html#sec:complex-values","title":"Complex values"},"subsections":[]}]}]},{"section":{"id":"sec:converting-objects-to-table-indices","level":"2","number":"12.2","path":"section-12.2.html#sec:converting-objects-to-table-indices","title":"Converting objects to table indices"},"subsections":[{"section":{"id":"sec:compressing-a-hash-code","level":"3","number":"12.2.1","path":"section-12.2.html#sec:compressing-a-hash-code","title":"Compressing a hash code"},"subsections":[]},{"section":{"id":"sec:modular-compression","level":"3","number":"12.2.2","path":"section-12.2.html#sec:modular-compression","title":"Modular compression"},"subsections":[]},{"section":{"id":"sec:negative-hash-codes","level":"3","number":"12.2.3","path":"section-12.2.html#sec:negative-hash-codes","title":"Negative hash codes"},"subsections":[]},{"section":{"id":"sec:the-hash-code-never-changes","level":"3","number":"12.2.4","path":"section-12.2.html#sec:the-hash-code-never-changes","title":"The hash code never changes"},"subsections":[]},{"section":{"id":"sec:handling-collisions","level":"3","number":"12.2.5","path":"section-12.2.html#sec:handling-collisions","title":"Handling collisions"},"subsections":[]}]},{"section":{"id":"sec:separate-chaining","level":"2","number":"12.3","path":"section-12.3.html#sec:separate-chaining","title":"Separate chaining"},"subsections":[{"section":{"id":"sec:alternatives-to-a-linked-list","level":"3","number":"12.3.1","path":"section-12.3.html#sec:alternatives-to-a-linked-list","title":"Alternatives to a linked list"},"subsections":[]},{"section":{"id":"sec:resizing-is-important","level":"3","number":"12.3.2","path":"section-12.3.html#sec:resizing-is-important","title":"Resizing is important"},"subsections":[]},{"section":{"id":"sec:implementation","level":"3","number":"12.3.3","path":"section-12.3.html#sec:implementation","title":"Implementation"},"subsections":[]},{"section":{"id":"sec:load-factor-and-resizing","level":"3","number":"12.3.4","path":"section-12.3.html#sec:load-factor-and-resizing","title":"Load factor and resizing"},"subsections":[]}]},{"section":{"id":"sec:implementing-sets-and-maps-using-separate-chaining","level":"2","number":"12.4","path":"section-12.4.html#sec:implementing-sets-and-maps-using-separate-chaining","title":"Implementing sets and maps using separate chaining"},"subsections":[{"section":{"id":"sec:implementing-sets","level":"3","number":"12.4.1","path":"section-12.4.html#sec:implementing-sets","title":"Implementing sets"},"subsections":[{"section":{"id":"sec:searching-for-an-element","level":"4","number":null,"path":"section-12.4.html#sec:searching-for-an-element","title":"Searching for an element"},"subsections":[]},{"section":{"id":"sec:adding-an-element","level":"4","number":null,"path":"section-12.4.html#sec:adding-an-element","title":"Adding an element"},"subsections":[]},{"section":{"id":"sec:removing-an-element","level":"4","number":null,"path":"section-12.4.html#sec:removing-an-element","title":"Removing an element"},"subsections":[]},{"section":{"id":"sec:load-factor-and-constants","level":"4","number":null,"path":"section-12.4.html#sec:load-factor-and-constants","title":"Load factor and constants"},"subsections":[]},{"section":{"id":"sec:resizing-the-internal-table","level":"4","number":null,"path":"section-12.4.html#sec:resizing-the-internal-table","title":"Resizing the internal table"},"subsections":[]}]},{"section":{"id":"sec:implementing-maps-1","level":"3","number":"12.4.2","path":"section-12.4.html#sec:implementing-maps-1","title":"Implementing maps"},"subsections":[]}]},{"section":{"id":"sec:open-addressing","level":"2","number":"12.5","path":"section-12.5.html#sec:open-addressing","title":"Open addressing"},"subsections":[{"section":{"id":"sec:implementation-overview","level":"4","number":null,"path":"section-12.5.html#sec:implementation-overview","title":"Implementation overview"},"subsections":[]},{"section":{"id":"sec:hashing-and-probing","level":"4","number":null,"path":"section-12.5.html#sec:hashing-and-probing","title":"Hashing and probing"},"subsections":[]},{"section":{"id":"sec:finding-and-inserting","level":"4","number":null,"path":"section-12.5.html#sec:finding-and-inserting","title":"Finding and inserting"},"subsections":[]},{"section":{"id":"sec:collisions-and-clusters","level":"4","number":null,"path":"section-12.5.html#sec:collisions-and-clusters","title":"Collisions and clusters"},"subsections":[]},{"section":{"id":"sec:deleting","level":"4","number":null,"path":"section-12.5.html#sec:deleting","title":"Deleting"},"subsections":[]}]},{"section":{"id":"sec:implementing-sets-and-maps-using-open-addressing","level":"2","number":"12.6","path":"section-12.6.html#sec:implementing-sets-and-maps-using-open-addressing","title":"Implementing sets and maps using open addressing"},"subsections":[{"section":{"id":"sec:resizing","level":"3","number":"12.6.1","path":"section-12.6.html#sec:resizing","title":"Resizing"},"subsections":[]},{"section":{"id":"sec:implementing-maps-2","level":"3","number":"12.6.2","path":"section-12.6.html#sec:implementing-maps-2","title":"Implementing maps"},"subsections":[]}]},{"section":{"id":"sec:deletion-in-open-addressing","level":"2","number":"12.7","path":"section-12.7.html#sec:deletion-in-open-addressing","title":"Deletion in open addressing"},"subsections":[{"section":{"id":"sec:simple-implementation-of-deletion","level":"3","number":"12.7.1","path":"section-12.7.html#sec:simple-implementation-of-deletion","title":"Simple implementation of deletion"},"subsections":[]},{"section":{"id":"sec:two-load-factors","level":"3","number":"12.7.2","path":"section-12.7.html#sec:two-load-factors","title":"Two load factors"},"subsections":[]}]},{"section":{"id":"sec:different-probing-strategies","level":"2","number":"12.8","path":"section-12.8.html#sec:different-probing-strategies","title":"Different probing strategies"},"subsections":[{"section":{"id":"sec:example-the-problem-with-linear-probing","level":"4","number":null,"path":"section-12.8.html#sec:example-the-problem-with-linear-probing","title":"Example: The problem with linear probing"},"subsections":[]}]},{"section":{"id":"sec:analysis-of-hash-tables","level":"2","number":"12.9","path":"section-12.9.html#sec:analysis-of-hash-tables","title":"Analysis of hash tables"},"subsections":[{"section":{"id":"sec:analysis-of-open-addressing","level":"3","number":"12.9.1","path":"section-12.9.html#sec:analysis-of-open-addressing","title":"Analysis of open addressing"},"subsections":[]}]},{"section":{"id":"sec:better-hash-functions","level":"2","number":"12.10","path":"section-12.10.html#sec:better-hash-functions","title":"Better hash functions"},"subsections":[{"section":{"id":"sec:a-simple-hash-function-for-strings","level":"3","number":"12.10.3","path":"section-12.10.html#sec:a-simple-hash-function-for-strings","title":"A simple hash function for strings"},"subsections":[]},{"section":{"id":"sec:improved-string-folding","level":"3","number":"12.10.4","path":"section-12.10.html#sec:improved-string-folding","title":"Improved string folding"},"subsections":[]}]},{"section":{"id":"sec:bucket-hashing","level":"2","number":"12.11","path":"section-12.11.html#sec:bucket-hashing","title":"Bucket hashing"},"subsections":[]},{"section":{"id":"sec:hash-tables-in-practice","level":"2","number":"12.12","path":"section-12.12.html#sec:hash-tables-in-practice","title":"Hash tables in practice"},"subsections":[{"section":{"id":"sec:algorithmic-complexity-attacks","level":"3","number":"12.12.1","path":"section-12.12.html#sec:algorithmic-complexity-attacks","title":"Algorithmic complexity attacks"},"subsections":[]},{"section":{"id":"sec:breaking-hash-functions","level":"3","number":"12.12.2","path":"section-12.12.html#sec:breaking-hash-functions","title":"Breaking hash functions"},"subsections":[]},{"section":{"id":"sec:hashing-standard-libraries","level":"3","number":"12.12.3","path":"section-12.12.html#sec:hashing-standard-libraries","title":"How are hash tables implemented in standard libraries?"},"subsections":[]}]},{"section":{"id":"sec:ch12-review","level":"2","number":"12.13","path":"section-12.13.html#sec:ch12-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-hash-functions","level":"3","number":"12.13.1","path":"section-12.13.html#sec:review-questions-hash-functions","title":"Review questions: Hash functions"},"subsections":[]},{"section":{"id":"sec:review-questions-hash-tables","level":"3","number":"12.13.2","path":"section-12.13.html#sec:review-questions-hash-tables","title":"Review questions: Hash tables"},"subsections":[]}]}]},{"section":{"id":"sec:graphs","level":"1","number":"13","path":"section-13.html#sec:graphs","title":"Graphs"},"subsections":[{"section":{"id":"sec:definitions-and-properties","level":"2","number":"13.1","path":"section-13.1.html#sec:definitions-and-properties","title":"Definitions and properties"},"subsections":[]},{"section":{"id":"sec:graph-representations","level":"2","number":"13.2","path":"section-13.2.html#sec:graph-representations","title":"Graph representations"},"subsections":[{"section":{"id":"sec:example-memory-usage","level":"4","number":null,"path":"section-13.2.html#sec:example-memory-usage","title":"Example: Memory usage"},"subsections":[]}]},{"section":{"id":"sec:implementing-graphs","level":"2","number":"13.3","path":"section-13.3.html#sec:implementing-graphs","title":"Implementing graphs"},"subsections":[{"section":{"id":"sec:adjacency-matrix","level":"3","number":"13.3.1","path":"section-13.3.html#sec:adjacency-matrix","title":"Adjacency matrix"},"subsections":[]},{"section":{"id":"sec:adjacency-list","level":"3","number":"13.3.2","path":"section-13.3.html#sec:adjacency-list","title":"Adjacency list"},"subsections":[]}]},{"section":{"id":"sec:traversing-graphs","level":"2","number":"13.4","path":"section-13.4.html#sec:traversing-graphs","title":"Traversing graphs"},"subsections":[{"section":{"id":"sec:depth-first-search","level":"3","number":"13.4.1","path":"section-13.4.html#sec:depth-first-search","title":"Depth-first search"},"subsections":[]},{"section":{"id":"sec:breadth-first-search","level":"3","number":"13.4.2","path":"section-13.4.html#sec:breadth-first-search","title":"Breadth-first search"},"subsections":[]}]},{"section":{"id":"sec:minimum-spanning-trees","level":"2","number":"13.5","path":"section-13.5.html#sec:minimum-spanning-trees","title":"Minimum spanning trees, MST"},"subsections":[]},{"section":{"id":"sec:prims-algorithm","level":"2","number":"13.6","path":"section-13.6.html#sec:prims-algorithm","title":"Prim’s algorithm for finding the MST"},"subsections":[{"section":{"id":"sec:finding-the-minimum-vertex","level":"4","number":null,"path":"section-13.6.html#sec:finding-the-minimum-vertex","title":"Finding the minimum vertex"},"subsections":[]},{"section":{"id":"sec:priority-queue-implementation-of-prims-algorithm","level":"3","number":"13.6.1","path":"section-13.6.html#sec:priority-queue-implementation-of-prims-algorithm","title":"Priority queue implementation of Prim’s algorithm"},"subsections":[]},{"section":{"id":"sec:correctness-of-prims-algorithm","level":"3","number":"13.6.2","path":"section-13.6.html#sec:correctness-of-prims-algorithm","title":"Correctness of Prim’s algorithm"},"subsections":[]}]},{"section":{"id":"sec:kruskals-algorithm","level":"2","number":"13.7","path":"section-13.7.html#sec:kruskals-algorithm","title":"Kruskal’s algorithm for finding the MST"},"subsections":[]},{"section":{"id":"sec:shortest-paths-problems","level":"2","number":"13.8","path":"section-13.8.html#sec:shortest-paths-problems","title":"Shortest-paths problems"},"subsections":[{"section":{"id":"sec:shortest-paths-on-weighted-graphs","level":"4","number":null,"path":"section-13.8.html#sec:shortest-paths-on-weighted-graphs","title":"Shortest-paths on weighted graphs"},"subsections":[]}]},{"section":{"id":"sec:dijkstras-algorithm","level":"2","number":"13.9","path":"section-13.9.html#sec:dijkstras-algorithm","title":"Dijkstra’s shortest-path algorithm"},"subsections":[{"section":{"id":"sec:finding-the-minimum-vertex-1","level":"4","number":null,"path":"section-13.9.html#sec:finding-the-minimum-vertex-1","title":"Finding the minimum vertex"},"subsections":[]},{"section":{"id":"sec:using-a-priority-queue","level":"3","number":"13.9.1","path":"section-13.9.html#sec:using-a-priority-queue","title":"Using a priority queue"},"subsections":[{"section":{"id":"sec:which-version-is-the-best","level":"4","number":null,"path":"section-13.9.html#sec:which-version-is-the-best","title":"Which version is the best?"},"subsections":[]}]}]},{"section":{"id":"sec:specialised-graph-algorithms","level":"2","number":"13.10","path":"section-13.10.html#sec:specialised-graph-algorithms","title":"Specialised algorithms on weighted graphs"},"subsections":[{"section":{"id":"sec:floyds-algorithm","level":"3","number":"13.10.1","path":"section-13.10.html#sec:floyds-algorithm","title":"All-pairs shortest paths: Floyd’s algorithm"},"subsections":[]},{"section":{"id":"sec:topological-sort","level":"3","number":"13.10.2","path":"section-13.10.html#sec:topological-sort","title":"Acyclic graphs: Topological sort"},"subsections":[{"section":{"id":"sec:depth-first-algorithm","level":"4","number":null,"path":"section-13.10.html#sec:depth-first-algorithm","title":"Depth-first algorithm"},"subsections":[]},{"section":{"id":"sec:queue-based-algorithm","level":"4","number":null,"path":"section-13.10.html#sec:queue-based-algorithm","title":"Queue-based algorithm"},"subsections":[]}]}]},{"section":{"id":"sec:ch13-review","level":"2","number":"13.11","path":"section-13.11.html#sec:ch13-review","title":"Review questions"},"subsections":[{"section":{"id":"sec:review-questions-graph-terminology","level":"3","number":"13.11.1","path":"section-13.11.html#sec:review-questions-graph-terminology","title":"Review questions: Graph terminology"},"subsections":[]},{"section":{"id":"sec:review-questions-graph-space-requirements","level":"3","number":"13.11.2","path":"section-13.11.html#sec:review-questions-graph-space-requirements","title":"Review questions: Graph space requirements"},"subsections":[]},{"section":{"id":"sec:summary-questions-1","level":"3","number":"13.11.3","path":"section-13.11.html#sec:summary-questions-1","title":"Summary questions"},"subsections":[]}]}]},{"section":{"id":"sec:glossary","level":"1","number":"14","path":"section-14.html#sec:glossary","title":"Glossary"},"subsections":[]},{"section":{"id":"sec:bibliography","level":"1","number":"15","path":"section-15.html#sec:bibliography","title":"Bibliography"},"subsections":[]}]}